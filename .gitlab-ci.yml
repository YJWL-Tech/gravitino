#
# Copyright 2024 Datastrato Pvt Ltd.
# This software is licensed under the Apache License version 2.
#
variables:
  KUBERNETES_CPU_REQUEST: 16000m
  KUBERNETES_CPU_LIMIT: 16000m
  KUBERNETES_MEMORY_REQUEST: 16Gi
  KUBERNETES_MEMORY_LIMIT: 16Gi

stages:
  - spotless_check
  - unit_test
  - integration_test
  - staging_deploy
  - online_deploy

before_script:
  - echo 'current time:'$(date "+%Y-%m-%d %H:%M:%S")

.check_and_test_rules:
  rules:
    - if: ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "branch-0.5")
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: ($CI_COMMIT_BRANCH || $CI_COMMIT_TAG =~ /^prod-v.*/)
      when: on_success
    - when: never

.integration_test_rules:
  rules:
    - if: ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "branch-0.5")
      when: never
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event"
        || $CI_COMMIT_BRANCH == "branch-0.5-mdh-master"
        || $CI_COMMIT_TAG =~ /^prod-v.*/)
      when: on_success
    - when: never

.clean_up_running_environment: &clean_up_running_environment
  before_script:
    - set +e
    - echo "Clean up running environment"
    - docker stop $(docker ps -aq)
    - docker rm $(docker ps -aq)
    - docker network rm trino-net
    - ps -ef | grep gravitino | awk '{print $2}' | xargs kill -9
    - set -e

# Check style
checkstyle:
  stage: spotless_check
  rules:
    - !reference [ .check_and_test_rules, rules ]
  script:
    - |
      echo '--------------------------------------------------------------------------------------------------------------------'
      echo 'Run `./gradlew spotlessApply -x test --no-build-cache` if this stage failed!'
      echo '--------------------------------------------------------------------------------------------------------------------'
    - ./gradlew clean spotlessCheck -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"

  allow_failure: false
  interruptible: true

# Unit tests
unit-test:
  stage: unit_test
  rules:
    - !reference [ .check_and_test_rules, rules ]
  script:
    - ./gradlew clean test -PskipITs --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
  allow_failure: false
  retry: 1
  interruptible: true

# Integration test
backend-embedded-integration-test:
  stage: integration_test
  variables:
    GIT_STRATEGY: clone
  <<: *clean_up_running_environment
  script:
    - echo "Running backend integration tests"
    - java -version
    - mvn -v
    - ./gradlew --stop
    - ./gradlew clean test --rerun-tasks -PskipTests -PtestMode=embedded -PjdkVersion=8
      -PskipWebITs -PjdbcBackend -x :clients:client-python:test
      "-Dorg.gradle.jvmargs=-Xmx32g -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError"
      --no-build-cache
  rules:
    - !reference [ .integration_test_rules, rules ]
  retry: 2
  interruptible: true
  tags:
    - grav-it

backend-deploy-integration-test:
  stage: integration_test
  variables:
    GIT_STRATEGY: clone
  <<: *clean_up_running_environment
  script:
    - echo "Running backend deploy integration tests"
    - java -version
    - mvn -v
    - ./gradlew --stop
    - ./gradlew compileDistribution -x test -PjdkVersion=8 --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx32g -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError"
    - ./gradlew test --rerun-tasks -PskipTests -PtestMode=deploy -PjdkVersion=8
      -PskipWebITs -PjdbcBackend -Pcluster=template -x :clients:client-python:test
      "-Dorg.gradle.jvmargs=-Xmx32g -XX:MaxPermSize=4096m -XX:+HeapDumpOnOutOfMemoryError"
      --no-build-cache
  rules:
    - !reference [ .integration_test_rules, rules ]
  retry: 2
  interruptible: true
  tags:
    - grav-it

python-integration-test:
  stage: integration_test
  cache:
    paths:
      - .gradle/python
  variables:
    GIT_STRATEGY: clone
  <<: *clean_up_running_environment
  script:
    - echo "Running python client integration tests"
    - java -version
    - mvn -v
    - ./gradlew --stop
    - ./gradlew compileDistribution -x test -PjdkVersion=8 --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
    - for pythonVersion in "3.8" "3.9" "3.10" "3.11"; do
      echo "Use Python version ${pythonVersion} to test the Python client.";
      ./gradlew -PjdkVersion=8 -PskipTests -PpythonVersion=${pythonVersion} :client:client-python:test
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      --no-build-cache;
      rm -rf ./distribution/package/data; done
  rules:
    - !reference [ .integration_test_rules, rules ]
  retry: 2
  interruptible: true
  tags:
    - grav-it

# Build staging env docker image
build-staging-docker:
  stage: staging_deploy
  variables:
    REGISTRY_SERVER: micr.cloud.mioffice.cn
    IMAGE: micr.cloud.mioffice.cn/meta/gravitino:staging-$CI_COMMIT_SHORT_SHA
  image: micr.cloud.mioffice.cn/containercloud/kaniko-executor-xiaomi:release
  script:
    - echo "{\"auths\":{\"$REGISTRY_SERVER\":{\"username\":\"$REGISTRY_USER\",\"password\":\"$REGISTRY_PASS\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg BUILD_CLUSTER=staging --destination $IMAGE --registry-mirror micr.cloud.mioffice.cn
  interruptible: true
  allow_failure: false
  only:
    - branch-0.5-mdh-staging

# Publish artifactory
publish-api:
  stage: online_deploy
  script:
    - ./gradlew clean :api:artifactoryPublish -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      -Partifactory_user=${MAVEN_REPO_USER} -Partifactory_password=${MAVEN_REPO_PASS}
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

publish-common:
  stage: online_deploy
  script:
    - ./gradlew clean :common:artifactoryPublish -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      -Partifactory_user=${MAVEN_REPO_USER} -Partifactory_password=${MAVEN_REPO_PASS}
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

publish-client-java:
  stage: online_deploy
  script:
    - ./gradlew clean :clients:client-java:artifactoryPublish -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      -Partifactory_user=${MAVEN_REPO_USER} -Partifactory_password=${MAVEN_REPO_PASS}
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

publish-client-java-runtime:
  stage: online_deploy
  script:
    - ./gradlew clean :clients:client-java-runtime:artifactoryPublish -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      -Partifactory_user=${MAVEN_REPO_USER} -Partifactory_password=${MAVEN_REPO_PASS}
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

publish-filesystem-hadoop3:
  stage: online_deploy
  script:
    - ./gradlew clean :clients:filesystem-hadoop3:artifactoryPublish -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      -Partifactory_user=${MAVEN_REPO_USER} -Partifactory_password=${MAVEN_REPO_PASS}
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

publish-filesystem-hadoop3-runtime:
  stage: online_deploy
  script:
    - ./gradlew clean :clients:filesystem-hadoop3-runtime:artifactoryPublish -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      -Partifactory_user=${MAVEN_REPO_USER} -Partifactory_password=${MAVEN_REPO_PASS}
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

publish-filesystem-hadoop3-bundled:
  stage: online_deploy
  script:
    - ./gradlew clean :clients:filesystem-hadoop3-bundled:artifactoryPublish -x test --no-build-cache
      "-Dorg.gradle.jvmargs=-Xmx16g -XX:MaxPermSize=2048m -XX:+HeapDumpOnOutOfMemoryError"
      -Partifactory_user=${MAVEN_REPO_USER} -Partifactory_password=${MAVEN_REPO_PASS}
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

publish-python:
  stage: online_deploy
  script:
    - export TWINE_USERNAME=${MAVEN_REPO_USER}
      && export TWINE_PASSWORD=${MAVEN_REPO_PASS}
      && ./gradlew clean :clients:client-python:deploy
  when: manual
  allow_failure: false
  only:
    - /^prod-v.*/

# Build tjwq env docker image
build-tjwq-docker:
  stage: online_deploy
  variables:
    REGISTRY_SERVER: micr.cloud.mioffice.cn
    IMAGE: micr.cloud.mioffice.cn/meta/gravitino:tjwq-$CI_COMMIT_TAG
  image: micr.cloud.mioffice.cn/containercloud/kaniko-executor-xiaomi:release
  script:
    - echo "{\"auths\":{\"$REGISTRY_SERVER\":{\"username\":\"$REGISTRY_USER\",\"password\":\"$REGISTRY_PASS\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg BUILD_CLUSTER=tjwq --destination $IMAGE --registry-mirror micr.cloud.mioffice.cn
  interruptible: true
  allow_failure: false
  only:
    - /^prod-v.*/

# Build zjy env docker image
build-zjy-docker:
  stage: online_deploy
  variables:
    REGISTRY_SERVER: micr.cloud.mioffice.cn
    IMAGE: micr.cloud.mioffice.cn/meta/gravitino:zjy-$CI_COMMIT_TAG
  image: micr.cloud.mioffice.cn/containercloud/kaniko-executor-xiaomi:release
  script:
    - echo "{\"auths\":{\"$REGISTRY_SERVER\":{\"username\":\"$REGISTRY_USER\",\"password\":\"$REGISTRY_PASS\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg BUILD_CLUSTER=zjy --destination $IMAGE --registry-mirror micr.cloud.mioffice.cn
  interruptible: true
  allow_failure: false
  only:
    - /^prod-v.*/